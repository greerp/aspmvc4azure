{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {

        "resourceSuffix": {
            "type": "string"
        },
        "siteLocation": {
            "type": "string"
        },
        "sku": {
            "type": "string",
            "allowedValues": [
                "Free",
                "Shared",
                "Basic",
                "Standard",
                "Premium"
            ],
            "defaultValue": "Free"
        },
        "workerSize": {
            "type": "string",
            "allowedValues": [
                "0",
                "1",
                "2"
            ],
            "defaultValue": "0"
        },
        "administratorLogin": {
            "type": "string"
        },
        "administratorPassword": {
            "type": "securestring"
        },
        "collation": {
            "type": "string",
            "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
        },
        "edition": {
            "type": "string",
            "defaultValue": "Basic"
        },
        "applicationName": {
            "type": "string",
            "defaultValue": "Default Application Name"
        },
        "repoUrl": {
            "type": "string"
        },
        "branch": {
            "type": "string"
        }
    },
    
    "variables": {
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "OSDiskName": "osdiskforwindowssimple",
        "addressPrefix": "10.0.0.0/16",
        "subnetName": "Subnet",
        "subnetPrefix": "10.0.0.0/24",
        "storageAccountType": "Standard_LRS",
        "publicIPAddressType": "Dynamic",
        "vmStorageAccountContainerName": "vhds",
        "vmSize": "Standard_A2",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
        "windowsOSVersion":"2012-R2-Datacenter",

        "siteName" : "[concat('site',parameters('resourceSuffix'))]",
        "siteLocation" : "[parameters('siteLocation')]",
        "nicName": "[concat('nic',parameters('resourceSuffix'))]",
        "sqlServerName" : "[concat('sqlsrv',parameters('resourceSuffix'))]",
        "databaseName":"[concat('sqldb',parameters('resourceSuffix'))]",
        "storageAccountName" : "[concat('store',parameters('resourceSuffix'))]",
        "publicIPAddressName": "[concat('vmipaddr',parameters('resourceSuffix'))]",
        "vmName": "[concat('vm',parameters('resourceSuffix'))]",
        "virtualNetworkName": "[concat('vnet',parameters('resourceSuffix'))]",
        "hostingPlanName" : "[concat('hostplan',parameters('resourceSuffix'))]",
        
        "administratorLogin" : "[parameters('administratorLogin')]",
        "administratorPassword" : "[parameters('administratorPassword')]",
        "dnsNameForPublicIP":"[parameters('resourceSuffix')]",
        "sku" : "[parameters('sku')",
        "workerSize" : "[parameters('workerSize')]",
        "applicationName" : "[parameters('applicationName')]",
        "repoUrl" : "[parameters('repoUrl')]",
        "branch" : "[parameters('branch')]",
    },

    "resources": [
        {
            "name": "[variables('sqlServerName')]",
            "type": "Microsoft.Sql/servers",
            "location": "[variables('siteLocation')]",
            "tags": {
                "displayName": "SqlServer"
            },
            "apiVersion": "2014-04-01-preview",
            "properties": {
                "administratorLogin": "[variables('administratorLogin')]",
                "administratorLoginPassword": "[variables('administratorPassword')]",
                "version":"12.0"
            },
            "resources": [
                {
                    "type": "firewallrules",
                    "apiVersion": "2014-04-01-preview",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', variables('sqlServerName'))]"
                    ],
                    "location": "[variables('siteLocation')]",
                    "name": "AllowAllWindowsAzureIps",
                    "properties": {
                        "endIpAddress": "109.232.61.206",
                        "startIpAddress": "109.232.61.206"
                    }
                },
               {
                    "type": "firewallrules",
                    "apiVersion": "2014-04-01-preview",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', variables('sqlServerName'))]"
                    ],
                    "location": "[variables('siteLocation')]",
                    "name": "Microsoft",
                    "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "255.255.255.255"
                    }
                },
               {
                    "type": "firewallrules",
                    "apiVersion": "2014-04-01-preview",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', variables('sqlServerName'))]"
                    ],
                    "location": "[variables('siteLocation')]",
                    "name": "AllowAllWindowsAzureIps_1",
                    "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "0.0.0.0"
                    }
                }
            ]
        },
        {
            "apiVersion": "2014-06-01",
            "name": "[variables('hostingPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[variables('siteLocation')]",
            "tags": {
                "displayName": "HostingPlan"
            },
            "properties": {
                "name": "[variables('hostingPlanName')]",
                "sku": "[variables('sku')]",
                "workerSize": "[variables('workerSize')]",
                "numberOfWorkers": 1
            }
        },
        {
            "apiVersion": "2014-06-01",
            "name": "[variables('siteName')]",
            "type": "Microsoft.Web/sites",
            "location": "[variables('siteLocation')]",
            "dependsOn": [
                "[concat('Microsoft.Web/serverFarms/', variables('hostingPlanName'))]"
            ],
            "tags": {
                "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "empty",
                "displayName": "Website"
            },
            "properties": {
                "name": "[variables('siteName')]",
                "serverFarm": "[variables('hostingPlanName')]"
            },
            "resources": [
                {
                    "apiVersion": "2014-04-01",
                    "type": "config",
                    "name": "web",
                    "dependsOn": [
                        "[concat('Microsoft.Web/Sites/', variables('siteName'))]"
                    ],
                    "properties": {
                        "connectionStrings": [
                            {
                                "ConnectionString": "[concat('Data Source=', reference(concat('Microsoft.Sql/servers/', variables('sqlServerName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('databaseName'), ';User Id=', variables('administratorLogin'), '@', variables('sqlServerName'), ';Password=', variables('administratorPassword'), ';')]",
                                "Name": "DefaultConnection",
                                "Type": 2
                            }
                        ],
                        "appSettings": [
                            {
                                "name": "ApplicationName",
                                "value": "[variables('applicationName')]"
                            },
                            {
                                "name": "DBServer",
                                "value": "[variables('sqlServerName')]"
                            },
                        ]
                    }
                },
                {
                    "apiVersion": "2014-04-01",
                    "name": "web",
                    "type": "sourcecontrols",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', variables('siteName'))]",
                        "[concat('Microsoft.Web/Sites/', variables('siteName'), '/config/web')]"
                    ],
                    "properties": {
                        "RepoUrl": "[variables('repoUrl')]",
                        "branch": "[variables('branch')]",
                        "IsManualIntegration": true
                    }
                },

                {
                  "apiVersion": "2014-04-01",
                  "name": "logs",
                  "dependsOn": [
                        "[concat('Microsoft.Web/Sites/', variables('siteName'))]"
                  ],
                  "type": "config",
                  "properties": {
                    "applicationLogs": {
                      "fileSystem": {
                        "level": "Verbose"
                      },
                      "azureTableStorage": {
                        "level": "Off",
                        "sasUrl": null
                      },
                      "azureBlobStorage": {
                        "level": "Off",
                        "sasUrl": null,
                        "retentionInDays": null
                      }
                    },
                    "httpLogs": {
                      "fileSystem": {
                        "retentionInMb": 35,
                        "retentionInDays": null,
                        "enabled": true
                      },
                      "azureBlobStorage": {
                        "sasUrl": null,
                        "retentionInDays": null,
                        "enabled": false
                      }
                    },
                    "failedRequestsTracing": {
                      "enabled": true
                    },
                    "detailedErrorMessages": {
                      "enabled": true
                    }
                  }
                },
            ]
        },
      
        {
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('storageAccountName')]",
        "apiVersion": "2015-05-01-preview",
        "location": "[variables('siteLocation')]",
        "properties": {
            "accountType": "[variables('storageAccountType')]"
            }
        },
            
        {
          "apiVersion": "2015-05-01-preview",
          "type": "Microsoft.Network/publicIPAddresses",
          "name": "[variables('publicIPAddressName')]",
          "location": "[variables('siteLocation')]",
          "properties": {
            "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
            "dnsSettings": {
                "domainNameLabel": "[variables('dnsNameForPublicIP')]"
                }
            }
        },

        {
          "apiVersion": "2015-05-01-preview",
          "type": "Microsoft.Network/virtualNetworks",
          "name": "[variables('virtualNetworkName')]",
          "location": "[variables('siteLocation')]",
          "properties": {
            "addressSpace": {
              "addressPrefixes": [
                "[variables('addressPrefix')]"
              ]
            },
            "subnets": [
              {
                "name": "[variables('subnetName')]",
                "properties": {
                  "addressPrefix": "[variables('subnetPrefix')]"
                }
              }
            ]
          }
        },

        {
          "apiVersion": "2015-05-01-preview",
          "type": "Microsoft.Network/networkInterfaces",
          "name": "[variables('nicName')]",
          "location": "[variables('siteLocation')]",
          "dependsOn": [
            "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
            "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
          ],
          "properties": {
            "ipConfigurations": [
              {
                "name": "ipconfig1",
                "properties": {
                  "privateIPAllocationMethod": "Dynamic",
                  "publicIPAddress": {
                    "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                  },
                  "subnet": {
                    "id": "[variables('subnetRef')]"
                  }
                }
              }
            ]
          }
        }


    ]
}
